#include <Arduino.h>
#include <U8g2lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include <Wire.h>
#endif

U8G2_SSD1306_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display

static const unsigned char konata [] U8X8_PROGMEM = {
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0xF8, 0x1F, 
  0xFE, 0xFF, 0x3F, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 
  0x01, 0x00, 0x00, 0x1E, 0xF0, 0xFF, 0x0F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0x8A, 0x01, 0x00, 0x1C, 0xF0, 0xFF, 0xC7, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD7, 0xFF, 0x9F, 0x00, 0x00, 
  0xC0, 0xFF, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE4, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x05, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x20, 
  0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 
  0x00, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x7F, 0x01, 0x1C, 
  0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 
  0xC0, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x1F, 0x00, 0xFA, 0xFF, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xC0, 0xFE, 0x07, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xE0, 
  0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x07, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x8D, 
  0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x83, 0xFF, 0x0D, 0x00, 0x00, 0x02, 
  0x00, 0x80, 0xFE, 0x8F, 0xC3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x91, 0x7F, 
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0xFE, 0xDD, 0x87, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xF4, 0x3F, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0xF0, 0xDD, 
  0xE7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x3F, 0x00, 0x00, 0x80, 0x00, 
  0x00, 0x00, 0x80, 0xF9, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x80, 0xFB, 0xEF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x98, 0x01, 0x00, 0x00, 0x00, 0xFE, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0xD8, 0x01, 
  0x00, 0x02, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 
  0x00, 0x00, 0xDE, 0x01, 0x80, 0x03, 0x00, 0xF8, 0x7F, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0xDE, 0x03, 0x80, 0x87, 0x00, 0x60, 
  0x78, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0xCE, 0x01, 
  0x80, 0x87, 0x01, 0x40, 0x38, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 
  0x00, 0x00, 0xFE, 0x01, 0x80, 0x87, 0x01, 0x00, 0x10, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0xEF, 0x03, 0xC0, 0x87, 0x01, 0x00, 
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x02, 0x00, 0xEF, 0x01, 
  0xC0, 0x87, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 
  0x00, 0x00, 0xEF, 0x03, 0xC0, 0x8F, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x01, 0x01, 0xC0, 0xF7, 0x01, 0xE0, 0x8F, 0x03, 0x00, 
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x80, 0xF7, 0x23, 
  0xE0, 0x8F, 0x03, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 
  0x01, 0xF0, 0xF7, 0x03, 0xE0, 0x8F, 0x03, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xC0, 0x01, 0x10, 0x50, 0x06, 0xF0, 0x8F, 0x07, 0x00, 
  0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x01, 0x10, 0x00, 0x2E, 
  0xF0, 0xDF, 0x07, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 
  0x01, 0x00, 0x00, 0x6E, 0x38, 0xDB, 0x0F, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xF0, 0x01, 0x00, 0x00, 0x6E, 0x18, 0x02, 0x0E, 0x00, 
  0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xC0, 0x01, 0x00, 0x00, 0xFF, 
  0x18, 0x00, 0x0C, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x9F, 
  0x00, 0x10, 0x80, 0xFF, 0x00, 0x00, 0x10, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xE3, 0xFF, 0x01, 0xF0, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 
  0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0x0B, 0xF0, 0xFF, 0xFF, 
  0x31, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFF, 
  0x0F, 0xF0, 0xFF, 0xFF, 0xF1, 0x07, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFE, 0xFF, 0x1E, 0xF8, 0xFF, 0xFF, 0xF3, 0x3F, 0x08, 0x00, 
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x73, 0x3C, 0xFC, 0xFF, 0xFF, 
  0xF3, 0xFF, 0x03, 0x40, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 
  0x3F, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xC8, 0x00, 0xFC, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xEF, 0xF9, 0x3F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFF, 
  0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF, 0xF3, 0x47, 0xF8, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x83, 0xFF, 0x02, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 
  0x01, 0xE8, 0xFF, 0xFF, 0xFF, 0x7F, 0xE0, 0xFF, 0x07, 0xE0, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x85, 0xFF, 0x81, 0xE1, 0xFF, 0xFF, 0xFF, 0x3F, 0x78, 0xFC, 
  0x07, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xE1, 0xC1, 0xFF, 0xFF, 
  0xFF, 0x3F, 0x78, 0xFE, 0x3F, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0x49, 0xE0, 
  0xE0, 0x00, 0xFE, 0xFF, 0xFF, 0x3F, 0x3C, 0xBE, 0x3F, 0xC0, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x03, 0x60, 0x01, 0xE0, 0x01, 0xFC, 0x1F, 0xBE, 0xC7, 
  0x7F, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0xFF, 0xFF, 0x07, 0xFE, 
  0xF0, 0x1F, 0x9C, 0xEF, 0x73, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xC0, 0xFF, 0x7F, 0xFC, 0xF3, 0x7B, 0xC0, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1D, 0x00, 0x40, 0xDF, 0xFB, 
  0x79, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x3F, 0x82, 0xFB, 0x7F, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xF8, 0xFF, 0xC3, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0x01, 
  0x88, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x17, 0x82, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, };

static const unsigned char kaworu [] U8X8_PROGMEM = {
  0xFF, 0xFF, 0xBF, 0xBB, 0xBF, 0xEF, 0xF6, 0xDF, 0xFD, 0x9F, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xDF, 0xF7, 0xF7, 0xFF, 
  0xFB, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 
  0xFF, 0xF7, 0xFE, 0xFF, 0xF7, 0xFF, 0xFF, 0xCF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xE9, 0x2E, 0xEF, 0x73, 0xFF, 0xFE, 0xFF, 0xFF, 0xFE, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xDF, 0xFB, 0xFF, 0xFE, 
  0xEF, 0xFF, 0xFE, 0x3F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0x97, 
  0xFF, 0xF9, 0xFF, 0xFF, 0xDF, 0xFF, 0xFD, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x7F, 0x37, 0xFE, 0xF7, 0xF9, 0xFF, 0xFF, 0xFE, 0xFF, 0xDB, 0x7F, 
  0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0xCB, 0xF7, 0xF8, 0xFF, 0xFE, 
  0xFF, 0xDF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xBF, 0xDB, 
  0xEF, 0xF8, 0xFF, 0xFE, 0xFF, 0xFF, 0xF7, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xDF, 0xDF, 0xFF, 0x6B, 0xFC, 0xFF, 0xFE, 0xFF, 0xFF, 0x7F, 0xDF, 
  0xFE, 0xFF, 0x7F, 0xFF, 0xFF, 0xDF, 0xFF, 0xF7, 0xF9, 0xFD, 0xB7, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xBF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 
  0xBB, 0xFD, 0x97, 0xFD, 0xFF, 0xFF, 0x7F, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xEF, 0xE7, 0xED, 0x61, 0xFD, 0x17, 0xFD, 0xFF, 0xFE, 0xFE, 0xFE, 
  0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xE9, 0xC1, 0xFD, 0x57, 0xFD, 
  0xFF, 0xFF, 0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xEF, 
  0xC1, 0xFF, 0x55, 0xFD, 0xFF, 0xFD, 0xFF, 0xF8, 0xFE, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xF7, 0xEF, 0xEF, 0xC1, 0xFF, 0x55, 0xF9, 0xF7, 0xFF, 0xDD, 0xF1, 
  0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xE6, 0xF7, 0x15, 0xF2, 
  0xFD, 0xDF, 0xFD, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0xF9, 
  0xB4, 0xC7, 0x15, 0xF8, 0xED, 0xDB, 0xFD, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xEF, 0xED, 0x70, 0xD2, 0x83, 0xF0, 0x69, 0xFF, 0xF9, 0xFF, 
  0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xED, 0x80, 0xD1, 0x6B, 0xE9, 
  0xB3, 0xF7, 0xFB, 0xFB, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xA5, 
  0x32, 0x7F, 0xFB, 0xC3, 0xA7, 0xB6, 0xFB, 0xDB, 0xFD, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xEF, 0x5D, 0xF2, 0x4C, 0xEB, 0x41, 0xF3, 0xB7, 0xFD, 0xBD, 
  0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7D, 0x7B, 0x2C, 0xF9, 0x02, 
  0x13, 0xDD, 0xF9, 0xFD, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x79, 
  0x79, 0xF8, 0x99, 0x81, 0x0D, 0x8D, 0xE2, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x59, 0x79, 0xD0, 0xBD, 0xF7, 0xD0, 0x4F, 0xC7, 0xF1, 
  0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x5F, 0xF9, 0xDC, 0x59, 0xB7, 
  0x40, 0x4A, 0xD3, 0xCF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 
  0xFA, 0xDF, 0x9B, 0xF9, 0x82, 0x42, 0xC3, 0xF9, 0xFB, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x3F, 0xFB, 0x67, 0x3B, 0x0F, 0x2D, 0x40, 0xC7, 0xFD, 
  0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFB, 0xAF, 0xF0, 0x6F, 
  0x1E, 0x44, 0xA2, 0xD1, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 
  0xFB, 0x3F, 0xF8, 0x0F, 0x04, 0x24, 0xE5, 0xF5, 0x3F, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x1F, 0xFF, 0x77, 0xFB, 0x0F, 0xD0, 0x0F, 0xE4, 0xFD, 
  0xBF, 0xC3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFC, 0x5B, 0xFB, 0x0F, 
  0xA0, 0x07, 0xE4, 0xFD, 0x27, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 
  0xFE, 0xFB, 0xFF, 0x3F, 0x96, 0x0F, 0xE1, 0xF9, 0x6F, 0xF0, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x7F, 0xFD, 0xFD, 0xFE, 0xFF, 0xF7, 0x0B, 0xF7, 0xCE, 
  0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0x78, 0xFE, 0xFB, 0xFF, 
  0xFF, 0x7B, 0x86, 0x7F, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x79, 0xFE, 0xFD, 0xFF, 0xFF, 0x0F, 0x64, 0xFB, 0xBF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFC, 0xF7, 0xFF, 0x7F, 0x5B, 0x66, 0xF3, 
  0x3F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xF3, 0xFF, 0xFF, 
  0xFF, 0xF3, 0xA7, 0xD0, 0x05, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFD, 0xFF, 0xDF, 0xFF, 0xFF, 0xEB, 0x83, 0xC0, 0xC1, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x3F, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF, 0xB6, 0xA3, 0xC0, 
  0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFD, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x41, 0xD4, 0xD2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xDD, 0xE7, 0xFF, 0xFF, 0x7F, 0x78, 0xED, 0x3F, 0xC8, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xDF, 0xFF, 0xFF, 0x3F, 0x1E, 0xF5, 0x2F, 
  0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBE, 0xFF, 0xFC, 0xFF, 
  0x3F, 0x8C, 0xBD, 0x37, 0xE8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFE, 0xFF, 0x8F, 0xFF, 0xAF, 0x09, 0xF4, 0x74, 0xBE, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xED, 0xFC, 0xF4, 
  0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xEC, 0x06, 0xF8, 0x86, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0x83, 0xFC, 0xAC, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xFC, 0x6F, 0x02, 0x06, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 
  0xFF, 0x33, 0x02, 0xAE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFD, 0xFF, 0x0B, 0xFF, 0x63, 0x48, 0x99, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0x03, 0xEE, 0x9B, 0x00, 0x59, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x6B, 0xF0, 
  0xFF, 0xA5, 0x92, 0xC0, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFB, 0x0F, 0xF8, 0xF7, 0xEC, 0x8C, 0xC0, 0xFD, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0xF8, 0xFF, 0x9F, 0x81, 0xC0, 
  0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x5F, 0xFF, 
  0xFF, 0xE8, 0xC7, 0xAF, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xF0, 0xDB, 0x37, 0xF1, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFE, 0x7F, 0xFC, 0xA9, 0x24, 
  0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 
  0x7D, 0x70, 0xCF, 0x33, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x3F, 0xFF, 0xFF, 0xCF, 0xFF, 0xF2, 0xDD, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF3, 0xFB, 0xFA, 
  0xDE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 
  0xBF, 0xFC, 0x7D, 0x5D, 0x9E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x7F, 0xFF, 0xBF, 0xFF, 0x03, 0x1E, 0xB0, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFE, 0xEF, 0xFF, 0x67, 0x8F, 
  0x64, 0xFF, 0xFF, 0xFF, };
  
void drawSmileFace(){
  u8g2.drawCircle(64, 32, 30);
  u8g2.drawCircle(50, 26, 3);
  u8g2.drawCircle(78, 26, 3);
  u8g2.drawEllipse(64, 40, 15, 10, U8G2_DRAW_LOWER_LEFT | U8G2_DRAW_LOWER_RIGHT);
}

void drawSadFace(){
  u8g2.drawCircle(64, 32, 30);
  u8g2.drawCircle(52, 28, 3);
  u8g2.drawCircle(76, 28, 3);
  u8g2.drawEllipse(64, 50, 15, 10, U8G2_DRAW_UPPER_LEFT | U8G2_DRAW_UPPER_RIGHT);
}

void drawNeutralFace(){
  u8g2.drawCircle(64, 32, 30);
  u8g2.drawCircle(58, 26, 3);
  u8g2.drawCircle(70, 26, 3);
  u8g2.drawLine(48, 42, 80, 42);
}

void drawBlushedFace(){
  u8g2.drawCircle(64, 32, 30);
  
  u8g2.drawCircle(52, 30, 8);
  u8g2.drawCircle(76, 30, 8);
  u8g2.drawDisc(52, 30, 2);
  u8g2.drawDisc(76, 30, 2);
  
  u8g2.drawLine(60, 48, 68, 48);
  
  u8g2.drawLine(46, 14, 56, 11);
  u8g2.drawLine(72, 11, 82, 14);
}

void setup(void) {
  u8g2.begin();  
}

int drawState = 0;

void loop(void) {
    u8g2.firstPage();
    do {
      switch(drawState){
          case 0: drawSmileFace(); break;
          case 1: drawSadFace(); break;
          case 2: drawNeutralFace(); break;
          case 3: drawBlushedFace(); break;
          case 4: u8g2.drawXBMP(0, 0, 128, 64, konata); break;
          case 5: u8g2.drawXBMP(0, 0, 128, 64, kaworu); break;
      }
      
    } while ( u8g2.nextPage() );
    delay(2000);
    u8g2.clearDisplay();
    drawState++;
    if(drawState > 5){
      drawState = 0;
    }
    
}
